{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity = existingItem.quantity + 1;\n      }\n    },\n    removeItemTocart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.itemId === id);\n      state.totalQuantity--;\n      if (existingItem === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n      }\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","title","removeItemTocart","itemId","filter","cartActions","actions"],"sources":["D:/beginning of react/sharpener/advance-redux/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice=createSlice({\r\n    name: 'cart',\r\n    initialState: {\r\n        items: [],\r\n        totalQuantity: 0,\r\n    },\r\n    reducers:{\r\n        addItemToCart(state,action){\r\n          const newItem = action.payload;\r\n          const existingItem = state.items.find((item)=>item.id===newItem.id)\r\n          state.totalQuantity++;\r\n          if(!existingItem){\r\n            state.items.push({\r\n                id: newItem.id,\r\n                price: newItem.price,\r\n                quantity : 1,\r\n                name: newItem.title\r\n            }); \r\n          }else{\r\n            existingItem.quantity= existingItem.quantity+1;           \r\n          }\r\n        },\r\n        removeItemTocart(state,action){\r\n          const id = action.payload;\r\n          const existingItem = state.items.find((item) => item.itemId === id);\r\n          state.totalQuantity--;\r\n          if (existingItem === 1) {\r\n           state.items=state.items.filter(item=> item.id !==id)\r\n          }\r\n          else{\r\n            existingItem.quantity--;\r\n\r\n          }\r\n    }}\r\n  })\r\n\r\n  export const cartActions= cartSlice.actions;\r\n\r\n  export default cartSlice;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAACD,WAAW,CAAC;EACxBE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE;EACnB,CAAC;EACDC,QAAQ,EAAC;IACLC,aAAaA,CAACC,KAAK,EAACC,MAAM,EAAC;MACzB,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9B,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAAEC,IAAI,IAAGA,IAAI,CAACC,EAAE,KAAGL,OAAO,CAACK,EAAE,CAAC;MACnEP,KAAK,CAACH,aAAa,EAAE;MACrB,IAAG,CAACO,YAAY,EAAC;QACfJ,KAAK,CAACJ,KAAK,CAACY,IAAI,CAAC;UACbD,EAAE,EAAEL,OAAO,CAACK,EAAE;UACdE,KAAK,EAAEP,OAAO,CAACO,KAAK;UACpBC,QAAQ,EAAG,CAAC;UACZhB,IAAI,EAAEQ,OAAO,CAACS;QAClB,CAAC,CAAC;MACJ,CAAC,MAAI;QACHP,YAAY,CAACM,QAAQ,GAAEN,YAAY,CAACM,QAAQ,GAAC,CAAC;MAChD;IACF,CAAC;IACDE,gBAAgBA,CAACZ,KAAK,EAACC,MAAM,EAAC;MAC5B,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAO;MACzB,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAK,CAACS,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACO,MAAM,KAAKN,EAAE,CAAC;MACnEP,KAAK,CAACH,aAAa,EAAE;MACrB,IAAIO,YAAY,KAAK,CAAC,EAAE;QACvBJ,KAAK,CAACJ,KAAK,GAACI,KAAK,CAACJ,KAAK,CAACkB,MAAM,CAACR,IAAI,IAAGA,IAAI,CAACC,EAAE,KAAIA,EAAE,CAAC;MACrD,CAAC,MACG;QACFH,YAAY,CAACM,QAAQ,EAAE;MAEzB;IACN;EAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAMK,WAAW,GAAEtB,SAAS,CAACuB,OAAO;AAE3C,eAAevB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}